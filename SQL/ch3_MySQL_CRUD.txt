4. SQL DML(Data Manipulation Language) 이해 및 실습 (focusing on CRUD)
    4.1. CRUD Create(생성), Read(읽기), Update(갱신), Delete(삭제)
        데이터 관리는 결국 데이터 생성, 읽기(검색), 수정(갱신), 삭제 를 한다는 의미



4.1.1 데이터 생성
    테이블에 컬럼에 맞추어 데이터를 넣는 작업
    기본 문법 (INSERT)

    1)테이블 전체 컬럼에 대응하는 값을 모두 넣기
        mysql> INSERT INTO 테이블명 VALUES(값1, 값2, ...);
        ex)
            mysql> INSERT INTO mytable VALUES(1, 'i7', '7700', 'Kaby Lake'); #칼럼(필드) 순서대로 해당되는 값을 넣어준다.
 
            Query OK, 1 row affected (0.01 sec)

            mysql> SELECT * FROM mytable; //mytable의 모든 칼럼들을 보여달라
            +----+------+-----------+------------+
            | id | name | model_num | model_type |
            +----+------+-----------+------------+
            |  1 | i7   | 7700      | Kaby Lake  |
            +----+------+-----------+------------+
            1 row in set (0.00 sec)

    2)테이블 특정 컬럼에 대응하는 값만 넣기 (지정되지 않은 컬럼은 디폴트값 또는 NULL값이 들어감)
        mysql> INSERT INTO 테이블명 (col1, col2, ...) VALUES(값1, 값2, ...);  #테이블명에는 내가 넣고 싶은 특정 필드들만 들어감
        ex)
        mysql> INSERT INTO mytable (name, model_num, model_type) VALUES('i7', '7700K', 'Kaby Lake');


4.1.2 데이터 읽기(검색)
    데이터베이스는 대용량 데이터를 가정하므로, 대용량 데이터 중 특정한 조건에 맞는 데이터를 추출하는 검색 작업이라고 하는 편이 보다 적합함
    기본 문법 (SELECT)

    1)테이블 전체 컬럼의 데이터 모두 읽기
        mysql> SELECT * FROM 테이블명; 

    2)테이블 특정 컬럼의 데이터만 읽기
        mysql> SELECT 컬럼1, 컬럼2, ... FROM 테이블명;
        mysql> SELECT name, model_num FROM mytable;

    3)테이블 특정 컬럼의 데이터를 검색하되, 표시할 컬럼명도 다르게 하기 ------> 내가 결과를 받을 때, 받고자하는 별칭으로 받는 거임
      실제 테이블의 칼럼의 이름은 그대로임!
        mysql> SELECT 컬럼1 AS 바꿀컬럼이름, 컬럼2 AS 바꿀컬럼이름 FROM 테이블명;
        mysql> SELECT name AS cpu_name, model_num AS cpu_num FROM mytable;

    4)데이터 정렬해서 읽기 - ORDER BY 정렬할 기준 컬럼명 DESC|ASC - DESC는 내림차순 ASC는 오름차순

        mysql> SELECT * FROM 테이블명 ORDER BY 정렬할기준컬럼명 DESC;
        mysql> SELECT 컬럼1, 컬럼2 FROM 테이블명 ORDER BY 정렬할기준컬럼명 ASC;
        
        mysql> SELECT * FROM mytable ORDER BY id DESC;  ## table을 id를 기준으로 하되, 내림차순
        mysql> SELECT * FROM mytable ORDER BY id ASC;   ## table을 id를 기준으로 하되, 오름차순

    5)조건에 맞는 데이터만 검색하기 (비교) - WHERE 조건문 으로 조건 검색 - 
    예) WHERE 컬럼명 < 값 - 예) WHERE 컬럼명 > 값 - 예) WHERE 컬럼명 = 값

        SELECT * FROM 테이블명 WHERE 필드명 = '값'
        mysql> SELECT * FROM mytable WHERE id < 2;
        mysql> SELECT * FROM mytable WHERE id = 1;
        mysql> SELECT * FROM mytable WHERE id > 1;
        mysql> SELECT * FROM mytable WHERE id>2 and id<7; ###이런 식으로 and, or 등의 조건들도 고려할 수 있음
        mysql> SELECT * FORM mytable WHERE id>3 or name="i7" ##이렇게 서로 다른 필드들도 or이나 and로 조건 걸 수 있음

    6)조건에 맞는 데이터만 검색하기 (LIKE 를 활용한 부분 일치) - WHERE 조건문 으로 조건 검색 
      - LIKE 활용  - 즉 구글 등에서 검색할 때, 해당 검색어를 포함한 블로그 등의 정보들이 모두 나온다. 
        
        -홍으로 시작되는 값을 모두 찾을 경우 (홍 뒤에 %가 붙음)
        SELECT * FROM 테이블명 WHERE 필드명 LIKE '홍%';

        -홍이 들어간 값을 모두 찾을 경우(홍의 앞 뒤로 %가 붙음. 즉 앞,뒤에 무슨 내용이 있든 홍만 포함하면 됨)
        SELECT * FROM 테이블명 WHERE 필드명 LIKE '%홍%';

        - 홍으로 시작되고 뒤에 2글자가 붙을 경우(홍으로 시작하고 언더바 연속 두 번)
        SELECT * FROM 테이블명 WHERE 필드명 LIKE '홍__';
        
        mysql> SELECT * FROM mytable WHERE name LIKE 'i%';
        mysql> SELECT * FROM mytable WHERE name LIKE 'i__';

    7)결과중 일부만 데이터 가져오기 (LIMIT 을 활용) - LIMIT 활용 - 예) 결과중 처음부터 10개만 가져오기

        SELECT * FROM 테이블명 LIMIT 10;

        예) 결과중 100번째부터, 10개만 가져오기
        SELECT * FROM 테이블명 LIMIT 100, 10;  #이러면 101번째부터 10개가 출력됨
        
        예)
        mysql> SELECT * FROM mytable LIMIT 1;
        mysql> SELECT * FROM mytable LIMIT 1, 1;  # 이러면 id 2부터 1개가 출력됨

        위에서 나열한 조건을 조합해서 다양한 Query를 작성할 수 있음
        조합 순서 SELECT FROM WHERE ORDER BY LIMIT
        
        예) (shell환경에서)
        mysql> SELECT id, name FROM mytable
        ->  WHERE id < 4 AND name LIKE '%i%'
        -> ORDER BY name DESC
        -> LIMIT 2;

4.1.3 데이터 수정-기본 문법 (UPDATE)

    보통 WHERE 조건문과 함께, 특정한 조건에 맞는 데이터만 수정하는 경우가 많음
    mysql> UPDATE 테이블명 SET 수정하고 싶은 컬럼명 = '수정하고 싶은 값' WHERE 특정 컬럼 = '값'(where의 조건으로 어떤 컬럼을 수정할 것인지 명시함);
    mysql> UPDATE mytable SET name='i3' where id=3 ;

    다수의 컬럼 값을 수정할 수도 있음
    mysql> UPDATE 테이블명 SET 수정하고 싶은 컬럼명1 = '수정하고 싶은 값', 수정하고 싶은 컬럼명2 = '수정하고 싶은 값', 수정하고 싶은 컬럼명3 = '수정하고 싶은 값' WHERE 특정 컬럼 < '값';
    mysql> UPDATE mytable SET name = 'i5', model_num = '5500' WHERE id = 3;
    # id가 3인 row의 name, model_num필드(칼럼)를 수정하는 것

    ********** 기존의 값이 row에 아예 없으면! INSERT를 해주고,
               기존의 값이 row의 몇 개의 필드라도 일단 있으면! update를 해준다 *****************

4.1.4 데이터 삭제-기본 문법 (DELETE)

        보통 WHERE 조건문과 함께 쓰여서, 특정한 조건에 맞는 데이터만 삭제하는 경우가 많음
        mysql> DELETE FROM 테이블명 WHERE 특정 컬럼 = '값';
        mysql> DELETE FROM mytable WHERE id = 3;

        테이블에 저장된 모든 데이터를 삭제할 수도 있음
        mysql> DELETE FROM 테이블명;
       
    

